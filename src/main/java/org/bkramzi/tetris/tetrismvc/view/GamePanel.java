/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.bkramzi.tetris.tetrismvc.view;

import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import org.bkramzi.tetris.tetrismvc.controller.BoardController;
import org.bkramzi.tetris.tetrismvc.model.Board;

/**
 *
 * @author ramzi
 */
public class GamePanel extends javax.swing.JPanel{

    /**
     * Creates new form GamePanel
     */
    public GamePanel() {
        initComponents();
        this.addKeyListener(boardController);
        boardView1.setBoard(board);
        this.addComponentListener(new ComponentListener() {

            public void componentResized(ComponentEvent e) {
            }

            public void componentMoved(ComponentEvent e) {
            }

            public void componentShown(ComponentEvent e) {
                GamePanel.this.requestFocusInWindow();
            }

            public void componentHidden(ComponentEvent e) {
            }
        });
        board.addChangeListener(new ChangeListener() {
            public void stateChanged(ChangeEvent e) {
                scoreLabel.setText(String.valueOf(board.getScore()));
                levelLabel.setText(String.valueOf(board.getLevel()));
            }
        });
        board.addChangeListener(tetriminoPeview);
        tetriminoPeview.setBoard(board);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        boardView1 = new org.bkramzi.tetris.tetrismvc.view.BoardView();
        panel1 = new java.awt.Panel();
        tetriminoPeview = new org.bkramzi.tetris.tetrismvc.view.TetriminoPeview();
        label1 = new java.awt.Label();
        scoreLabel = new java.awt.Label();
        label2 = new java.awt.Label();
        levelLabel = new java.awt.Label();

        setPreferredSize(new java.awt.Dimension(350, 466));

        boardView1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        panel1.setPreferredSize(new java.awt.Dimension(100, 100));
        panel1.setLayout(new java.awt.GridBagLayout());

        tetriminoPeview.setPreferredSize(new java.awt.Dimension(100, 100));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        panel1.add(tetriminoPeview, gridBagConstraints);

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText("Score");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panel1.add(label1, gridBagConstraints);

        scoreLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panel1.add(scoreLabel, gridBagConstraints);

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText("Level");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panel1.add(label2, gridBagConstraints);

        levelLabel.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panel1.add(levelLabel, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(boardView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(boardView1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.bkramzi.tetris.tetrismvc.view.BoardView boardView1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label levelLabel;
    private java.awt.Panel panel1;
    private java.awt.Label scoreLabel;
    private org.bkramzi.tetris.tetrismvc.view.TetriminoPeview tetriminoPeview;
    // End of variables declaration//GEN-END:variables

    Board board = new Board();
    BoardController boardController = new BoardController(board, boardView1);
    
    public void newGame(){
     boardController.startNew();
    }
    
    public void pause(){
        boardController.pause();
    }
    
    public void resume(){
        boardController.resume();
    }
}
